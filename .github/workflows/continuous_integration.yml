# GitHub Continuous Integration Configuration
#
# EECS 280 contributing docs and GitHub Action docs:
# https://github.com/eecs280staff/p1-stats/blob/main/CONTRIBUTING.md
# https://docs.github.com/en/free-pro-team@latest/actions
name: Regression-Tests

# Define conditions for when to run this action
on:
  pull_request: # Run on all pull requests
  push: # Run on all pushes to main
    branches:
      - main

# A workflow run is made up of one or more jobs.  Each job has an id.  For
# example, "functional-tests (macOS-latest, g++)".
jobs:
  test:
    name: functional-tests
    runs-on: ${{ matrix.os }}
    strategy:
      # Define OS and compiler versions to use
      #
      # Virtual Environments: OSes and preinstalled software:
      # https://github.com/actions/virtual-environments
      #
      # Many are commented out to avoid going over budget
      matrix:
        include:
          - os: ubuntu-18.04
            compiler: g++-4.8
          # - os: ubuntu-16.04
          #   compiler: g++-5
          # - os: ubuntu-18.04
          #   compiler: g++-7
          # - os: ubuntu-18.04
          #   compiler: g++-8
          # - os: ubuntu-18.04
          #   compiler: g++-9
          # - os: ubuntu-18.04
          #   compiler: g++-10
          # - os: ubuntu-18.04
          #   compiler: clang++-8
          # - os: ubuntu-18.04
          #   compiler: clang++-9
          - os: ubuntu-latest
            compiler: g++
          - os: macOS-latest
            compiler: g++

    # Sequence of tasks for this job
    steps:
      # Check out latest code using a pre-existing GH action
      # Docs: https://github.com/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install old compiler
        if: matrix.compiler == 'g++-4.8'
        run: sudo apt-get install g++-4.8

      # Run tests
      - name: Run tests
        env:
          CXX: ${{ matrix.compiler }}
        run: |
          which $CXX
          $CXX --version
          make test

      # Uncomment this chunk of YML code to open an SSH debug session to the GH
      # actions server in case of a hard-to-debug failure. The SSH session is
      # provided by tmate via a pre-existing GH action.
      # Docs: https://github.com/mxschmitt/action-tmate
      #
      # Warning: use this sparingly since it will consume GitHub action credits
      # until the SSH session is closed.
      # \/ UNCOMMENT \/
      # - name: Open SSH session on test failure
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      # /\ UNCOMMENT /\


  files-up-to-date:
    runs-on: ubuntu-latest
    # Sequence of tasks for this job
    steps:
      # Check out latest code using a pre-existing GH action
      # Docs: https://github.com/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify .h and .hpp versions are identical
        run: |
          diff unit_test_framework.h unit_test_framework.hpp

      - name: How to fix this failing CI job
        if: ${{ failure() }}
        run: |
          echo "unit_test_framework.h and unit_test_framework.hpp must be identical"